package ${packageName}.controller;

import java.util.List;
import jakarta.servlet.http.HttpServletResponse;
import lombok.AllArgsConstructor;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.olive.common.annotation.Log;
import com.olive.common.core.domain.AjaxResult;
import com.olive.common.enums.BusinessType;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.${ClassName}Service;
import com.olive.common.utils.poi.ExcelUtil;
#if($table.crud || $table.sub)
#elseif($table.tree)
#end
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.Operation;

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @since ${datetime}
 */
@Tag(name = "【${functionName}】管理")
@RequestMapping("/${moduleName}/${businessName}")
@RestController
@AllArgsConstructor
public class ${ClassName}Controller {
    private final ${ClassName}Service ${className}Service;

    /**
     * 分页查询${functionName}列表
     */
    @GetMapping("/list")
    @Operation(summary = "查询${functionName}列表")
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:list')")
    public Page<${ClassName}> page(${ClassName} ${className}, PageRecord page) {
        return ${className}Service.page(${className}, page);
    }

    /**
     * 获取${functionName}详细信息
     */
    @Operation(summary = "获取${functionName}详细信息")
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:query')")
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public ${ClassName} detail(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return ${className}Service.get${ClassName}ById(${pkColumn.javaField}));
    }

    /**
     * 新增${functionName}
     */
    @Operation(summary = "新增${functionName}")
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:add')")
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody ${ClassName} ${className}) {
        return ${className}Service.add(${className});
    }

    /**
     * 修改${functionName}
     */
    @Operation(summary = "修改${functionName}")
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:edit')")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody ${ClassName} ${className}) {
        return ${className}Service.edit(${className});
    }

    /**
     * 导出${functionName}列表
     */
    @Operation(summary = "导出${functionName}列表")
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:export')")
    @Log(title = "${functionName}", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, ${ClassName} ${className}) {
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        ExcelUtil<${ClassName}> util = new ExcelUtil<${ClassName}>(${ClassName}.class);
        util.exportExcel(response, list, "${functionName}数据");
    }
}
