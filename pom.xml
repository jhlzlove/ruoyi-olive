<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.olive</groupId>
    <artifactId>ruoyi-olive</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <name>ruoyi-olive</name>
    <description>二次开发框架，不再兼容原框架</description>

    <modules>
        <module>olive-base</module>
        <module>olive-service</module>
        <module>olive-api</module>
        <module>olive-model</module>
    </modules>

    <properties>
        <revision>0.0.1</revision>
        <java.version>24</java.version>
        <maven.compiler.source>24</maven.compiler.source>
        <maven.compiler.target>24</maven.compiler.target>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <jimmer.version>0.9.89</jimmer.version>
        <lombok.version>1.18.38</lombok.version>
        <kaptcha.version>2.3.3</kaptcha.version>
        <mysql.version>9.3.0</mysql.version>
        <minio.version>8.5.17</minio.version>
        <liquibase.version>4.32.0</liquibase.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- jimmer -->
            <dependency>
                <groupId>org.babyfish.jimmer</groupId>
                <artifactId>jimmer-spring-boot-starter</artifactId>
                <version>${jimmer.version}</version>
            </dependency>

            <!-- mysql -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- liquibase -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>

            <!-- 验证码 -->
            <dependency>
                <groupId>pro.fessional</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- minio -->
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
                <spring.boot.mainclass>com.olive.OliveApplication</spring.boot.mainclass>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
                <spring.boot.mainclass>com.olive.OliveApplication</spring.boot.mainclass>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- 本机有多个 jdk，且默认环境变量的 jdk 版本和项目使用的不一致时使用此插件，需要在 toolchain.xml 先配置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-toolchains-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>toolchain</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <toolchains>
                        <jdk>
                            <version>24</version>
                        </jdk>
                    </toolchains>
                </configuration>
            </plugin>

            <!-- 编译插件配置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <!-- 如果使用了 lombok，需要确保在 jimmer apt 之前添加该内容 -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>

                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                        </path>

                        <path>
                            <groupId>org.babyfish.jimmer</groupId>
                            <artifactId>jimmer-apt</artifactId>
                            <version>${jimmer.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- 依赖分离插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <!-- <overWriteReleases>false</overWriteReleases> -->
                            <!-- <overWriteSnapshots>false</overWriteSnapshots> -->
                            <!-- <overWriteIfNewer>true</overWriteIfNewer> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 配置文件分离插件 (sprint-boot-maven-plugin 支持指定配置文件目录) -->
            <!-- <plugin> -->
            <!--     <groupId>org.apache.maven.plugins</groupId> -->
            <!--     <artifactId>maven-resources-plugin</artifactId> -->
            <!--     <executions> -->
            <!--         <execution> -->
            <!--             <id>copy-resources</id> -->
            <!--             <phase>package</phase> -->
            <!--             <goals> -->
            <!--                 <goal>copy-resources</goal> -->
            <!--             </goals> -->
            <!--             <configuration> -->
            <!--                 <outputDirectory>${project.build.directory}/conf</outputDirectory> -->
            <!--                 <resources> -->
            <!--                     <resource> -->
            <!--                         <directory>src/main/resources</directory> -->
            <!--                         <includes> -->
            <!--                             <include>**/*.yml</include> -->
            <!--                             <include>**/*.properties</include> -->
            <!--                         </includes> -->
            <!--                     </resource> -->
            <!--                 </resources> -->
            <!--             </configuration> -->
            <!--         </execution> -->
            <!--     </executions> -->
            <!-- </plugin> -->

            <!-- 将 pom 文件引用的变量解析为实际值 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- 依赖仓库 -->
    <repositories>
        <repository>
            <id>aliyunmaven</id>
            <name>阿里云公共仓库</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

</project>